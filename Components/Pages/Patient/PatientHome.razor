@page "/patient/home"
@rendermode InteractiveServer
@layout BlazorApp1.Components.Layout.PatientLayout
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject IPatientService PatientService
@inject BlazorApp1.Authentication.AuthStateProvider AuthStateProvider
@using BlazorApp1.Services.Interfaces
@using BlazorApp1.Models.DTOs

@code {
  private PatientProfileDto? currentPatient;
    private PatientHistoryDto? latestHistory;
    private List<AppointmentDto> upcomingAppointments = new();
    private List<NotificationDto> recentNotifications = new();
    private int unreadNotificationCount = 0;
    private bool showNotificationDropdown = false;
    private bool showProfileDropdown = false;
    private bool IsLoading = true;
    private string? ErrorMessage;
protected override async Task OnInitializedAsync()
    {
        try
        {
            // Get current user session
            var userSession = await AuthStateProvider.GetCurrentUserSessionAsync();
            if (userSession == null)
            {
                ErrorMessage = "Unable to retrieve user session. Please log in again.";
                return;
            }

            // Load patient profile
            currentPatient = await PatientService.GetPatientByUserIdAsync(userSession.UserId);
            if (currentPatient == null)
            {
                ErrorMessage = "Unable to load patient profile.";
                return;
            }

            // Load notifications
            recentNotifications = await PatientService.GetRecentNotificationsAsync(currentPatient.PatientId);
            unreadNotificationCount = recentNotifications?.Count(n => !n.IsRead) ?? 0;

            // Load upcoming appointments
            upcomingAppointments = (await PatientService.GetUpcomingAppointmentsAsync(currentPatient.PatientId)).ToList();

            // Load latest patient history
            try
            {
                latestHistory = await PatientService.GetLatestHistoryAsync(currentPatient.PatientId);
                Console.WriteLine($"Loaded history: Temp={latestHistory?.TemperatureC}, BP={latestHistory?.BloodPressure}, HR={latestHistory?.PulseBPM}");
            }
            catch
            {
                latestHistory = null;
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred while loading the patient dashboard: {ex.Message}";
            Console.WriteLine($"Patient dashboard loading error: {ex}");
        }
        finally
        {
            IsLoading = false;
        }
    }

    private async Task ToggleNotificationDropdown()
    {
        showNotificationDropdown = !showNotificationDropdown;
        showProfileDropdown = false;
        
        if (showNotificationDropdown && unreadNotificationCount > 0)
        {
            await PatientService.MarkAllNotificationsReadAsync(currentPatient?.PatientId ?? 0);
            unreadNotificationCount = 0;
            StateHasChanged();
        }
    }

    private void ToggleProfileDropdown()
    {
        showProfileDropdown = !showProfileDropdown;
        showNotificationDropdown = false;
    }

  private async Task Logout()
    {
        try
        {
            await AuthStateProvider.MarkUserAsLoggedOutAsync();
            NavigationManager.NavigateTo("/", true);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during logout: {ex.Message}");
        }
    }

    private string GetPatientInitials()
    {
        if (string.IsNullOrEmpty(currentPatient?.FullName))
            return "P";
        
        var names = currentPatient.FullName.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        return names.Length > 1 ? $"{names[0][0]}{names[1][0]}" : names[0][0].ToString();
    }

    private string GetVitalValue(string vital)
    {
        if (latestHistory == null) return "N/A";
        
        return vital switch
        {
            "temperature" => latestHistory.TemperatureC?.ToString("F1") + "Â°C" ?? "N/A",
            "bloodPressure" => latestHistory.BloodPressure ?? "N/A",
            "heartRate" => latestHistory.PulseBPM?.ToString() ?? "N/A",
            _ => "N/A"
        };
    }
}

<!-- Hero Section -->
<section class="hero-section">
    <div class="container py-5">
        <!-- Top Navigation Bar -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-end align-items-center gap-3">
                    <!-- Notification Dropdown -->
                    <div class="dropdown">
                        <button class="btn btn-light rounded-circle p-2 position-relative" @onclick="ToggleNotificationDropdown">
                            <i class="bi bi-bell text-primary fs-5"></i>
                            @if (unreadNotificationCount > 0)
                            {
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                    @unreadNotificationCount
                                </span>
                            }
                        </button>
                        @if (showNotificationDropdown)
                        {
                            <div class="dropdown-menu show notification-dropdown">
                                <div class="dropdown-header d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0">Notifications</h6>
                                    <small class="text-muted">@recentNotifications.Count recent</small>
                                </div>
                                <div class="dropdown-divider"></div>
                                @if (recentNotifications.Any())
                                {
                                    @foreach (var notification in recentNotifications.Take(5))
                                    {
                                        <div class="dropdown-item notification-item">
                                            <div class="d-flex align-items-start">
                                                <div class="notification-icon me-2">
                                                    <i class="bi bi-info-circle text-primary"></i>
                                                </div>
                                                <div class="flex-grow-1">
                                                    <div class="notification-title">@notification.Title</div>
                                                    <div class="notification-message">@notification.Message</div>
                                                    <small class="text-muted">@notification.CreatedAt.ToString("MMM dd, HH:mm")</small>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    <div class="dropdown-divider"></div>
                                    <a href="/patient/notifications" class="dropdown-item text-center text-primary">
                                        View All Notifications
                                    </a>
                                }
                                else
                                {
                                    <div class="dropdown-item text-center text-muted">
                                        No notifications
                                    </div>
                                }
                            </div>
                        }
                    </div>

                    <!-- Profile Dropdown -->
                    <div class="dropdown">
                        <button class="btn btn-light rounded-circle p-0 profile-avatar" @onclick="ToggleProfileDropdown">
                            @if (!string.IsNullOrEmpty(currentPatient?.ProfilePictureUrl))
                            {
                                <img src="@currentPatient.ProfilePictureUrl" alt="Profile" class="rounded-circle" width="40" height="40">
                            }
                            else
                            {
                                <div class="avatar-initials">
                                    @GetPatientInitials()
                                </div>
                            }
                        </button>
                        @if (showProfileDropdown)
                        {
                            <div class="dropdown-menu show profile-dropdown">
                                <div class="dropdown-header text-center">
                                    <div class="profile-info">
                                        <div class="fw-bold">@currentPatient?.FullName</div>
                                        <small class="text-muted">@currentPatient?.UserName</small>
                                    </div>
                                </div>
                                <div class="dropdown-divider"></div>
                                <a href="/patient/profile" class="dropdown-item">
                                    <i class="bi bi-person me-2"></i> Profile
                                </a>
                                <a href="/patient/settings" class="dropdown-item">
                                    <i class="bi bi-gear me-2"></i> Settings
                                </a>
                                <div class="dropdown-divider"></div>
                                <button class="dropdown-item text-danger" @onclick="Logout">
                                    <i class="bi bi-box-arrow-right me-2"></i> Logout
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row align-items-center min-vh-50">
            <div class="col-lg-6">
                <div class="hero-content">
                    <div class="welcome-badge mb-3">
                        <span class="badge bg-primary bg-opacity-10 text-primary px-3 py-2 rounded-pill">
                            <i class="bi bi-person-heart me-1"></i>
                            Welcome Back, @(currentPatient?.FullName ?? "Patient")
                        </span>
                    </div>
                    <h1 class="display-5 fw-bold mb-3 text-white">
                        Your Health,<br>
                        <span class="text-white">Our Priority</span>
                    </h1>
                    <p class="lead text-white text-opacity-75 mb-4">
                        Access your medical records, schedule appointments, and stay connected with your healthcare team all in one place.
                    </p>
                    <div class="d-flex flex-wrap gap-3">
                        <a href="/patient/book-appointment" class="btn btn-primary btn-lg rounded-pill px-4">
                            <i class="bi bi-calendar-plus me-2"></i>
                            Book Appointment
                        </a>
                        <a href="/patient/medical-records" class="btn btn-light btn-lg rounded-pill px-4">
                            <i class="bi bi-file-medical me-2"></i>
                            View Records
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="hero-image text-center">
                    <div class="floating-card">
                        <div class="card border-0 shadow-lg rounded-4 p-4">
                            <div class="row text-center">
                                <div class="col-4">
                                    <div class="metric-item">
                                        <div class="metric-icon bg-success bg-opacity-10 rounded-circle d-inline-flex align-items-center justify-content-center mb-2" style="width: 50px; height: 50px;">
                                            <i class="bi bi-thermometer text-success fs-5"></i>
                                        </div>
                                        <div class="metric-value fw-bold text-dark">@GetVitalValue("temperature")</div>
                                        <div class="metric-label small text-muted">Temperature</div>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="metric-item">
                                        <div class="metric-icon bg-info bg-opacity-10 rounded-circle d-inline-flex align-items-center justify-content-center mb-2" style="width: 50px; height: 50px;">
                                            <i class="bi bi-activity text-info fs-5"></i>
                                        </div>
                                        <div class="metric-value fw-bold text-dark">@GetVitalValue("bloodPressure")</div>
                                        <div class="metric-label small text-muted">Blood Pressure</div>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="metric-item">
                                        <div class="metric-icon bg-warning bg-opacity-10 rounded-circle d-inline-flex align-items-center justify-content-center mb-2" style="width: 50px; height: 50px;">
                                            <i class="bi bi-heart text-warning fs-5"></i>
                                        </div>
                                        <div class="metric-value fw-bold text-dark">@GetVitalValue("heartRate")</div>
                                        <div class="metric-label small text-muted">Heart Rate</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Quick Actions Section -->
<section class="py-5 bg-white">
    <div class="container">
        <div class="row">
            <div class="col-12 text-center mb-5">
                <h2 class="fw-bold mb-3">Quick Actions</h2>
                <p class="text-muted">Everything you need, just a click away</p>
            </div>
        </div>
        <div class="row g-4 justify-content-center">
            <div class="col-md-6 col-xl-3">
                <div class="action-card h-100 text-center">
                    <div class="card border-0 shadow-sm rounded-4 h-100 hover-lift">
                        <div class="card-body p-4">
                            <div class="action-icon bg-primary bg-opacity-10 rounded-circle d-inline-flex align-items-center justify-content-center mb-3" style="width: 70px; height: 70px;">
                                <i class="bi bi-calendar-week text-primary fs-3"></i>
                            </div>
                            <h5 class="fw-bold mb-2">Appointments</h5>
                            <p class="text-muted small mb-3">Schedule, reschedule, or view your upcoming appointments</p>
                            <a href="/patient/appointments" class="btn btn-sm btn-outline-primary rounded-pill px-3">
                                Manage <i class="bi bi-arrow-right ms-1"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6 col-xl-3">
                <div class="action-card h-100 text-center">
                    <div class="card border-0 shadow-sm rounded-4 h-100 hover-lift">
                        <div class="card-body p-4">
                            <div class="action-icon bg-success bg-opacity-10 rounded-circle d-inline-flex align-items-center justify-content-center mb-3" style="width: 70px; height: 70px;">
                                <i class="bi bi-file-medical text-success fs-3"></i>
                            </div>
                            <h5 class="fw-bold mb-2">Medical Records</h5>
                            <p class="text-muted small mb-3">Access your complete medical history and test results</p>
                            <a href="/patient/medical-records" class="btn btn-sm btn-outline-success rounded-pill px-3">
                                View <i class="bi bi-arrow-right ms-1"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Upcoming Appointments Section -->
<section class="py-5 bg-primary bg-opacity-5">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="card border-0 shadow-sm rounded-4 mb-4">
                    <div class="card-header bg-transparent border-0 p-4">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="fw-bold mb-0">Upcoming Appointments</h5>
                            <a href="/patient/appointments" class="text-decoration-none text-primary">View All</a>
                        </div>
                    </div>
                    <div class="card-body p-4 pt-0">
                        @if (upcomingAppointments.Any())
                        {
                            @foreach (var appointment in upcomingAppointments.Take(3))
                            {
                                <div class="appointment-item d-flex align-items-center p-3 bg-light rounded-3 mb-3">
                                    <div class="appointment-date text-center me-3">
                                        <div class="fw-bold text-primary">@appointment.ScheduledDateTime.Day</div>
                                        <div class="small text-muted">@appointment.ScheduledDateTime.ToString("MMM")</div>
                                    </div>
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1 fw-bold">@appointment.DoctorName</h6>
                                        <p class="mb-1 text-muted small">@appointment.Status</p>
                                        <p class="mb-0 small text-primary">
                                            <i class="bi bi-clock me-1"></i>
                                            @appointment.ScheduledDateTime.ToString("HH:mm")
                                        </p>
                                    </div>
                                    <div class="appointment-status">
                                        <span class="badge @(appointment.Status == "Confirmed" ? "bg-success" : "bg-warning") bg-opacity-10 text-@(appointment.Status == "Confirmed" ? "success" : "warning")">
                                            @appointment.Status
                                        </span>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center py-4">
                                <i class="bi bi-calendar-x text-muted fs-1"></i>
                                <p class="text-muted mt-2">No upcoming appointments</p>
                                <a href="/patient/book-appointment" class="btn btn-primary btn-sm">Book Now</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Custom Styles -->
<style>  
    

    :root {
        --primary-blue: #1e40af;
        --primary-blue-light: #3b82f6;
        --primary-blue-dark: #1e3a8a;
        --secondary-blue: #60a5fa;
        --accent-blue: #93c5fd;
        --background-blue: #0047AB;
        --blue-gradient: linear-gradient(135deg, #1e40af 0%, #3b82f6 50%, #60a5fa 100%);
        --blue-gradient-soft: linear-gradient(135deg, rgba(30, 64, 175, 0.08) 0%, rgba(147, 197, 253, 0.03) 100%);
    }

    .hero-section {
        background: var(--background-blue);
        position: relative;
        overflow: hidden;
        min-height: 65vh;
        color: white;
    }

    .hero-section::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -20%;
        width: 100%;
        height: 100%;
        background: radial-gradient(circle, rgba(255, 255, 255, 0.15) 0%, transparent 70%);
        z-index: -1;
    }

    .min-vh-50 {
        min-height: 65vh;
    }

    .text-primary {
        color: var(--primary-blue) !important;
    }

    .display-5 {
        font-weight: 700;
        text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }

    .welcome-badge .badge {
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.15)) !important;
        color: white !important;
        font-weight: 600;
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .hero-content {
        animation: fadeInUp 0.8s ease-out;
    }

    .floating-card {
        animation: float 6s ease-in-out infinite;
    }

    .floating-card .card {
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(147, 197, 253, 0.05));
        backdrop-filter: blur(10px);
        border: 1px solid rgba(30, 64, 175, 0.2);
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes float {
        0%, 100% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-10px);
        }
    }

    .welcome-badge {
        animation: slideInLeft 0.8s ease-out 0.2s both;
    }

    @@keyframes slideInLeft {
        from {
            opacity: 0;
            transform: translateX(-30px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .metric-item {
        transition: all 0.3s ease;
    }

    .metric-item:hover {
        transform: translateY(-3px);
    }

    .hover-lift {
        transition: all 0.3s ease;
        border: 1px solid rgba(30, 64, 175, 0.1);
    }

    .hover-lift:hover {
        transform: translateY(-8px);
        box-shadow: 0 15px 35px rgba(30, 64, 175, 0.15) !important;
        border-color: var(--accent-blue);
    }

    .action-icon {
        transition: all 0.3s ease;
    }

    .action-card:hover .action-icon {
        transform: scale(1.1);
    }

    .appointment-item {
        transition: all 0.3s ease;
        border: 1px solid transparent;
        background: rgba(30, 64, 175, 0.05) !important;
        border-radius: 1rem !important;
    }

    .appointment-item:hover {
        background: white !important;
        border-color: var(--accent-blue);
        box-shadow: 0 8px 25px rgba(30, 64, 175, 0.15);
        transform: translateX(8px);
    }

    .appointment-date {
        min-width: 70px;
        padding: 0.5rem;
        background: rgba(30, 64, 175, 0.1);
        border-radius: 0.75rem;
    }

    .appointment-date .fw-bold {
        color: var(--primary-blue);
        font-size: 1.3rem;
    }

    .btn {
        transition: all 0.3s ease;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .btn-primary {
        background: var(--blue-gradient);
        border: none;
        box-shadow: 0 4px 15px rgba(30, 64, 175, 0.3);
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, var(--primary-blue-dark) 0%, var(--primary-blue) 100%);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(30, 64, 175, 0.4);
    }

    .btn-light {
        background: rgba(255, 255, 255, 0.9);
        border: none;
        color: var(--primary-blue);
        font-weight: 600;
    }

    .btn-light:hover {
        background: white;
        color: var(--primary-blue-dark);
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
    }

    .btn-outline-primary {
        border-color: var(--primary-blue);
        color: var(--primary-blue);
        background: rgba(30, 64, 175, 0.05);
    }

    .btn-outline-primary:hover {
        background: var(--primary-blue);
        border-color: var(--primary-blue);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(30, 64, 175, 0.3);
    }

    .card {
        transition: all 0.3s ease;
        border: 1px solid rgba(30, 64, 175, 0.1);
    }

    .card-header {
        background: rgba(30, 64, 175, 0.03) !important;
        border-bottom: 1px solid rgba(30, 64, 175, 0.1) !important;
    }

    .badge {
        font-weight: 500;
    }

    .badge.bg-success {
        background: linear-gradient(135deg, #10b981, #34d399) !important;
        border: none;
    }

    .badge.bg-warning {
        background: linear-gradient(135deg, #f59e0b, #fbbf24) !important;
        border: none;
    }

    .bg-primary.bg-opacity-5 {
        background: rgba(90, 103, 216, 0.05) !important;
    }

    .card:hover {
        border-color: var(--accent-blue) !important;
    }

    /* Dropdown Styles */
    .dropdown {
        position: relative;
    }

    .dropdown-menu {
        position: absolute;
        top: 100%;
        right: 0;
        z-index: 1000;
        min-width: 300px;
        background: white;
        border: 1px solid rgba(0,0,0,0.1);
        border-radius: 0.5rem;
        box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        margin-top: 0.5rem;
    }

    .notification-dropdown {
        max-height: 400px;
        overflow-y: auto;
    }

    .profile-dropdown {
        min-width: 200px;
    }

    .notification-item {
        padding: 0.75rem;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        cursor: pointer;
    }

    .notification-item:hover {
        background-color: rgba(30, 64, 175, 0.05);
    }

    .notification-title {
        font-weight: 600;
        font-size: 0.9rem;
        margin-bottom: 0.25rem;
    }

    .notification-message {
        font-size: 0.8rem;
        color: #6c757d;
        margin-bottom: 0.25rem;
    }

    .profile-avatar {
        width: 40px;
        height: 40px;
        border: 2px solid rgba(255,255,255,0.3);
    }

    .avatar-initials {
        width: 40px;
        height: 40px;
        background: var(--primary-blue);
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 0.9rem;
    }

    .profile-info {
        padding: 0.5rem 0;
    }

    /* Responsive Design */
    @@media (max-width: 991.98px) {
        .hero-content {
            text-align: center;
            margin-bottom: 3rem;
        }
        
        .display-5 {
            font-size: 2rem;
        }
        
        .floating-card {
            margin-top: 2rem;
        }
    }

@@media (max-width: 767.98px) {
        .hero-section {
            padding: 2rem 0;
        }
        
        .display-5 {
            font-size: 1.75rem;
        }
        
        .lead {
            font-size: 1rem;
        }
        
        .btn-lg {
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
        }
        
        .appointment-item {
            flex-direction: column;
            text-align: center;
        }
        
        .appointment-date {
            margin-bottom: 0.5rem;
        }
        
        .appointment-status {
            margin-top: 0.5rem;
        }

        .dropdown-menu {
            right: -100px;
            min-width: 250px;
        }
    }

    @@media (max-width: 575.98px) {
        .container {
            padding-left: 1rem;
            padding-right: 1rem;
        }
        
        .py-5 {
            padding-top: 2rem !important;
            padding-bottom: 2rem !important;
        }
        
        .hero-section {
            min-height: 50vh;
        }
        
        .min-vh-50 {
            min-height: 50vh;
        }
        
        .floating-card .card {
            margin: 1rem 0;
        }
        
        .metric-item {
            margin-bottom: 1rem;
        }
        
        .metric-icon {
            width: 40px !important;
            height: 40px !important;
        }
        
        .metric-value {
            font-size: 0.9rem;
        }
        
        .action-icon {
            width: 50px !important;
            height: 50px !important;
        }
        
        .action-icon i {
            font-size: 1.5rem !important;
        }
        
        .card-body.p-4 {
            padding: 1.5rem !important;
        }
        
        .appointment-item {
            padding: 1rem !important;
        }
        
        .notification-dropdown {
            right: -50px !important;
            min-width: 280px !important;
        }
        
        .profile-dropdown {
            right: -30px !important;
        }
        
        .welcome-badge .badge {
            font-size: 0.8rem;
            padding: 0.5rem 1rem !important;
        }
        
        .d-flex.gap-3 {
            gap: 0.75rem !important;
        }
        
        .btn.rounded-pill {
            padding: 0.5rem 1rem;
            font-size: 0.9rem;
        }
    }

    /* Additional smooth animations */
    .hero-content > * {
        animation-fill-mode: both;
    }

    .hero-content h1 {
        animation: fadeInUp 0.8s ease-out 0.2s both;
    }

    .hero-content p {
        animation: fadeInUp 0.8s ease-out 0.4s both;
    }

    .hero-content .d-flex {
        animation: fadeInUp 0.8s ease-out 0.6s both;
    }

    /* Loading states */
    .metric-value:empty::after {
        content: "Loading...";
        color: #6c757d;
        font-size: 0.8rem;
        font-weight: normal;
    }

    /* Focus states for accessibility */
    .btn:focus,
    .dropdown button:focus {
        box-shadow: 0 0 0 3px rgba(30, 64, 175, 0.25);
        outline: none;
    }

    .dropdown-item:focus {
        background-color: rgba(30, 64, 175, 0.1);
        outline: none;
    }

    /* Scrollbar customization for notification dropdown */
    .notification-dropdown::-webkit-scrollbar {
        width: 4px;
    }

    .notification-dropdown::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 2px;
    }

    .notification-dropdown::-webkit-scrollbar-thumb {
        background: var(--primary-blue);
        border-radius: 2px;
    }

    .notification-dropdown::-webkit-scrollbar-thumb:hover {
        background: var(--primary-blue-dark);
    }

    /* Print styles */
    @@media print {
        .hero-section,
        .dropdown,
        .btn,
        .notification-dropdown,
        .profile-dropdown {
            display: none !important;
        }
        
        .card {
            border: 1px solid #000 !important;
            box-shadow: none !important;
        }
        
        .appointment-item {
            background: white !important;
            border: 1px solid #ccc !important;
        }
    }

    /* High contrast mode support */
    @@media (prefers-contrast: high) {
        .hero-section {
            background: #000080;
        }
        
        .card {
            border-color: #000 !important;
        }
        
        .text-muted {
            color: #666 !important;
        }
        
        .btn-outline-primary {
            border-width: 2px;
        }
    }

    /* Reduced motion support */
    @@media (prefers-reduced-motion: reduce) {
        *,
        *::before,
        *::after {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
        }
        
        .floating-card {
            animation: none;
        }
        
        .hover-lift:hover {
            transform: none;
        }
        
        .appointment-item:hover {
            transform: none;
        }
    }


    </style>